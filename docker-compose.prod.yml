version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf
      - frontend-build:/usr/share/nginx/html
    depends_on:
      - backend1
      - backend2
      - backend3
      - backend4
      - frontend-builder
    restart: unless-stopped
    networks:
      - ctf-network

  backend1:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      - PORT=5000
    volumes:
      - sqlite-data:/app/data
    restart: unless-stopped
    networks:
      - ctf-network

  backend2:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      - PORT=5000
    volumes:
      - sqlite-data:/app/data
    restart: unless-stopped
    networks:
      - ctf-network

  backend3:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      - PORT=5000
    volumes:
      - sqlite-data:/app/data
    restart: unless-stopped
    networks:
      - ctf-network

  backend4:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET:-change-this-secret-in-production}
      - PORT=5000
    volumes:
      - sqlite-data:/app/data
    restart: unless-stopped
    networks:
      - ctf-network

  frontend-builder:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    volumes:
      - frontend-build:/app/dist
    command: echo "Frontend built"

volumes:
  sqlite-data:
  frontend-build:

networks:
  ctf-network:
    driver: bridge